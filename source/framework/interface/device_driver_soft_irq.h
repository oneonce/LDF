#ifndef __DEVICE_DRIVER_SOFT_IRQ_H__
#define __DEVICE_DRIVER_SOFT_IRQ_H__
#include <core/device.h>

#ifdef __cplusplus
extern "C" {
#endif




	/* 软中断回调函数 */
	typedef void (*soft_irq_callback)(uint32_t irq_no);



	typedef struct
	{
		device_t device;

		/**********************************************************************************************************************
		**函数名称: open
		**功能描述: 打开
		**输入参数: 无
		**输出参数: 无
		**函数返回: 无
		**********************************************************************************************************************/
		void (*open)();

		/**********************************************************************************************************************
		**函数名称: close
		**功能描述: 关闭
		**输入参数: 无
		**输出参数: 无
		**函数返回: 无
		**********************************************************************************************************************/
		void (*close)();

		/**********************************************************************************************************************
		**函数名称: do_irq
		**功能描述: 产生一个软中断
		**输入参数:
		**                irq_id: 中断号，参考platform.h中的SOFT_IRQ_ID_
		**输出参数: 无
		**函数返回: 无
		**********************************************************************************************************************/
		void (*do_irq)(uint32_t irq_id);

		/**********************************************************************************************************************
		**函数名称: register_irq_callback
		**功能描述: 注册软中断回调函数
		**                注:
		**                1. 必须在open之前注册
		**输入参数:
		**                callback: 回调函数
		**输出参数: 无
		**函数返回: 无
		**********************************************************************************************************************/
		void (*register_irq_callback)(soft_irq_callback callback);

	} device_driver_soft_irq_t;



#ifdef __cplusplus
}
#endif

#endif // !__DEVICE_DRIVER_SOFT_IRQ_H__
