/**********************************************************************************************************************
**                            Copyright(C), oneonce. 2020-2025. All rights reserved.
***********************************************************************************************************************
*文件名称: device_driver_flash.h
*功能描述: FLASH驱动接口
*                注: 该驱动接口主要用于对device_dirver_block的接口进行包装供业务层调用，如读/写地址对齐问题
*作       者: oneonce
*日       期: 2020.05.01
*版       本: 1.0
*其       他:
***********************************************************************************************************************/
#ifndef __DEVICE_DRIVER_FLASH_H__
#define __DEVICE_DRIVER_FLASH_H__

#include <core/device.h>

#ifdef __cplusplus
extern "C" {
#endif



	typedef struct
	{
		device_t device;

		/**********************************************************************************************************************
		**函数名称: open
		**功能描述: 打开
		**输入参数: 无
		**输出参数: 无
		**函数返回: 无
		**********************************************************************************************************************/
		void (*open)();

		/**********************************************************************************************************************
		**函数名称: close
		**功能描述: 关闭
		**                注:
		**                1. 关闭设备时，驱动层必须调用release_device_driver释放当前设备
		**输入参数:
		**                device: 待关闭的设备
		**输出参数: 无
		**函数返回: 无
		**********************************************************************************************************************/
		void (*close)(device_t* device);

		/**********************************************************************************************************************
		**函数名称: read
		**功能描述: 读数据
		**                 注: 当业务层调用该接口时，驱动层需处理读地址页对齐问题
		**输入参数:
		**                address: 地址
		**                size: 读数据大小
		**                millisecond: 超时时间(毫秒)
		**输出参数:
		**                buffer: 存放读取到数据的缓冲区
		**函数返回:
		**                >=0: 成功
		**                <0: 失败，参考ERROR_CODES
		**********************************************************************************************************************/
		int32_t (*read) (uint32_t address, uint8_t* buffer, int32_t size, const uint32_t millsecond);

		/**********************************************************************************************************************
		**函数名称: write
		**功能描述: 写数据
		**                 注: 当业务层调用该接口时，驱动层需处理写地址页对齐问题
		**输入参数:
		**                address: 地址
		**                buf: 数据缓冲区
		**                size: 写数据大小
		**                millisecond: 超时时间(毫秒)
		**输出参数: 无
		**函数返回:
		**                >=0:成功
		**                <0: 失败，参考ERROR_CODES
		**********************************************************************************************************************/
		int32_t (*write)(uint32_t address, const uint8_t* buf, int32_t size, const uint32_t millsecond);

		/**********************************************************************************************************************
		**函数名称: erase
		**功能描述: 擦除
		**                 注: 当业务层调用该接口时，驱动层需判断当前地址是否是块首地址，否则返回ERROR_CODE_NOT_BLK_START_ADDR错误
		**输入参数:
		**                address: 块地址(需块对齐)
		**                millisecond: 超时时间(毫秒)
		**输出参数: 无
		**函数返回:
		**                >=0: 擦除成功
		**                <0: 擦除失败，参考ERROR_CODES
		**********************************************************************************************************************/
		int32_t (*erase)(uint32_t address, const uint32_t millsecond);
	};

#ifdef __cplusplus
}
#endif

#endif // !__DEVICE_DRIVER_FLASH_H__
